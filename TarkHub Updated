--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (0 == v24) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v24 = 1;
		end
		if (v24 == 3) then
			v8 = _G[v7("\83\171\44\20\2\69\161\48", "\39\196\66\97\111")];
			v9 = _G[v7("\67\46\242\27\65\128", "\48\90\128\114\47\231\164")][v7("\6\213\22\252", "\100\172\98\153\184\165")];
			v10 = _G[v7("\66\73\3\26\6\78", "\49\61\113\115\104\41\217\166")][v7("\182\206\248\61", "\213\166\153\79\221\120")];
			v24 = 4;
		end
		if (v24 == 8) then
			v23 = nil;
			v23 = function(v28, v29, ...)
				local v35 = 0;
				local v36;
				local v37;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				while true do
					if (v35 == 4) then
						v48 = nil;
						while true do
							local v51 = 0;
							while true do
								if (v51 == 1) then
									if (3 == v36) then
										local v53 = 0;
										while true do
											if (v53 == 1) then
												v43 = nil;
												v36 = 4;
												break;
											end
											if (v53 == 0) then
												v42 = nil;
												v42 = function()
													local v69 = 0;
													local v70;
													local v71;
													local v72;
													local v73;
													local v74;
													while true do
														if (v69 == 2) then
															v74 = nil;
															while true do
																local v118 = 0;
																while true do
																	if (0 == v118) then
																		if (v70 == (24 - (18 + 5))) then
																			return (v74 * ((16631387 - 10388051) + 10533880)) + (v73 * ((67457 - ((2106 - 1276) + 366 + 525)) - ((31 - 17) + 73 + 113 + 0))) + (v72 * 256) + v71;
																		end
																		if (v70 == (0 - 0)) then
																			local v128 = 0;
																			while true do
																				if (v128 == 1) then
																					v70 = 1;
																					break;
																				end
																				if (v128 == 0) then
																					v71, v72, v73, v74 = v9(v28, v37, v37 + 3);
																					v37 = v37 + (1799 - (651 + 1144));
																					v128 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v69 == 0) then
															v70 = 0;
															v71 = nil;
															v69 = 1;
														end
														if (1 == v69) then
															v72 = nil;
															v73 = nil;
															v69 = 2;
														end
													end
												end;
												v53 = 1;
											end
										end
									end
									if (v36 == 4) then
										local v54 = 0;
										while true do
											if (v54 == 1) then
												v44 = function(v61)
													local v75 = 0;
													local v76;
													local v77;
													local v78;
													while true do
														if (v75 == 0) then
															v76 = 0;
															v77 = nil;
															v75 = 1;
														end
														if (v75 == 1) then
															v78 = nil;
															while true do
																local v119 = 0;
																while true do
																	if (0 == v119) then
																		if (v76 == (2 + 1)) then
																			return v14(v78);
																		end
																		if (v76 == 1) then
																			local v129 = 0;
																			while true do
																				if (v129 == 1) then
																					v76 = 2 + 0;
																					break;
																				end
																				if (v129 == 0) then
																					v77 = v11(v28, v37, (v37 + v61) - (1 + (60 - (49 + 11))));
																					v37 = v37 + v61;
																					v129 = 1;
																				end
																			end
																		end
																		v119 = 1;
																	end
																	if (v119 == 1) then
																		if (v76 == 0) then
																			local v130 = 0;
																			while true do
																				if (v130 == 1) then
																					v76 = 1;
																					break;
																				end
																				if (v130 == 0) then
																					v77 = nil;
																					if not v61 then
																						local v173 = 0;
																						local v174;
																						while true do
																							if (0 == v173) then
																								v174 = 243 - (172 + 71);
																								while true do
																									if (v174 == (1113 - (181 + 932))) then
																										v61 = v42();
																										if (v61 == (((2586 + 2154) - 3000) - (595 + (1988 - (825 + (44 - 26)))))) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v130 = 1;
																				end
																			end
																		end
																		if ((1 + 1) == v76) then
																			local v131 = 0;
																			while true do
																				if (0 == v131) then
																					v78 = {};
																					for v151 = (3 - 2) + 0 + (712 - (308 + 404)), #v77 do
																						v78[v151] = v10(v9(v11(v77, v151, v151)));
																					end
																					v131 = 1;
																				end
																				if (1 == v131) then
																					v76 = 3;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v36 = 5;
												break;
											end
											if (v54 == 0) then
												v43 = function()
													local v79 = 0;
													local v80;
													local v81;
													local v82;
													local v83;
													local v84;
													local v85;
													local v86;
													while true do
														if (v79 == 0) then
															v80 = 0;
															v81 = nil;
															v79 = 1;
														end
														if (3 == v79) then
															v86 = nil;
															while true do
																local v120 = 0;
																while true do
																	if (v120 == 1) then
																		if (v80 == 0) then
																			local v132 = 0;
																			while true do
																				if (v132 == 1) then
																					v80 = 2 - 1;
																					break;
																				end
																				if (v132 == 0) then
																					v81 = v42();
																					v82 = v42();
																					v132 = 1;
																				end
																			end
																		end
																		if (v80 == 3) then
																			local v133 = 0;
																			while true do
																				if (0 == v133) then
																					if (v85 == (((872 - (185 + 1)) - (430 + 256)) + (0 - 0) + (605 - (126 + 479)))) then
																						if (v84 == 0) then
																							return v86 * (0 + (0 - 0));
																						else
																							local v176 = 0;
																							local v177;
																							while true do
																								if (v176 == 0) then
																									v177 = 0 - 0;
																									while true do
																										if (v177 == 0) then
																											v85 = (1 + 2 + 1) - (2 + 1);
																											v83 = 0 + 0;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v85 == ((8242 - 3523) - 2672)) then
																						return ((v84 == ((1155 - (1106 + 49)) - 0)) and (v86 * (1 / (0 - 0)))) or (v86 * NaN);
																					end
																					return v16(v86, v85 - (((1253 + 3184) - (240 + 493)) - 2681)) * (v83 + (v84 / (((946 - (476 + 332 + 133)) - (7 - 4)) ^ (164 - (430 - 318)))));
																				end
																			end
																		end
																		break;
																	end
																	if (0 == v120) then
																		if (v80 == 2) then
																			local v134 = 0;
																			while true do
																				if (v134 == 0) then
																					v85 = v39(v82, 1 + (3 - 2) + ((94 - (35 + 18)) - (702 - (95 + 585))), 1070 - ((1619 - (186 + 468)) + 74));
																					v86 = ((v39(v82, (1311 + 94) - (183 + (1084 - (172 + 601)) + (2079 - (1307 + 299)) + 406)) == (1 + (1594 - (1194 + 400)))) and -(3 - (1 + 1 + 0))) or (1 + (756 - (540 + 216)));
																					v134 = 1;
																				end
																				if (v134 == 1) then
																					v80 = 3;
																					break;
																				end
																			end
																		end
																		if (v80 == (1133 - (129 + 1003))) then
																			local v135 = 0;
																			while true do
																				if (v135 == 0) then
																					v83 = 1 - 0;
																					v84 = (v39(v82, (4 - 2) - ((1 - 0) + 0), 20) * ((((2 + 8) - 6) - (5 - 3)) ^ (((197 - 111) + 2 + 2) - 58))) + v81;
																					v135 = 1;
																				end
																				if (v135 == 1) then
																					v80 = 2;
																					break;
																				end
																			end
																		end
																		v120 = 1;
																	end
																end
															end
															break;
														end
														if (v79 == 1) then
															v82 = nil;
															v83 = nil;
															v79 = 2;
														end
														if (v79 == 2) then
															v84 = nil;
															v85 = nil;
															v79 = 3;
														end
													end
												end;
												v44 = nil;
												v54 = 1;
											end
										end
									end
									v51 = 2;
								end
								if (v51 == 3) then
									if (v36 == 2) then
										local v55 = 0;
										while true do
											if (0 == v55) then
												v40 = function()
													local v87 = 0;
													local v88;
													local v89;
													while true do
														if (v87 == 1) then
															while true do
																local v121 = 0;
																while true do
																	if (v121 == 0) then
																		if (v88 == (1 + 0)) then
																			return v89;
																		end
																		if (0 == v88) then
																			local v136 = 0;
																			while true do
																				if (v136 == 0) then
																					v89 = v9(v28, v37, v37);
																					v37 = v37 + 1;
																					v136 = 1;
																				end
																				if (v136 == 1) then
																					v88 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (0 == v87) then
															v88 = 94 - (15 + 79);
															v89 = nil;
															v87 = 1;
														end
													end
												end;
												v41 = nil;
												v55 = 1;
											end
											if (v55 == 1) then
												v41 = function()
													local v90 = 0;
													local v91;
													local v92;
													local v93;
													while true do
														if (v90 == 0) then
															v91 = 1683 - (805 + 878);
															v92 = nil;
															v90 = 1;
														end
														if (v90 == 1) then
															v93 = nil;
															while true do
																local v122 = 0;
																while true do
																	if (v122 == 0) then
																		if (v91 == (1374 - (1166 + 208))) then
																			local v137 = 0;
																			while true do
																				if (v137 == 0) then
																					v92, v93 = v9(v28, v37, v37 + (88 - (((53 + 126) - 129) + 5 + 31)));
																					v37 = v37 + (3 - 1);
																					v137 = 1;
																				end
																				if (v137 == 1) then
																					v91 = 29 - (4 + 24);
																					break;
																				end
																			end
																		end
																		if (v91 == 1) then
																			return (v93 * (85 + 171)) + v92;
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v36 = 3;
												break;
											end
										end
									end
									if (v36 == 5) then
										local v56 = 0;
										while true do
											if (v56 == 1) then
												v46 = function(...)
													return {...}, v20("#", ...);
												end;
												v36 = 6;
												break;
											end
											if (v56 == 0) then
												v45 = v42;
												v46 = nil;
												v56 = 1;
											end
										end
									end
									break;
								end
								if (v51 == 0) then
									if (v36 == 1) then
										local v57 = 0;
										while true do
											if (v57 == 0) then
												v39 = nil;
												v39 = function(v62, v63, v64)
													if v64 then
														local v107 = 0;
														local v108;
														local v109;
														while true do
															if (v107 == 0) then
																v108 = 0 + 0;
																v109 = nil;
																v107 = 1;
															end
															if (v107 == 1) then
																while true do
																	if (v108 == (199 - (51 + 148))) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v109 = (v62 / (((1861 - (1851 + 9)) + 0 + 1) ^ (v63 - ((4 - 2) - 1)))) % ((7 - 5) ^ (((v64 - (2 - (1 - 0))) - (v63 - (((3425 - (847 + 810)) - ((734 - (291 + 325)) + 778)) - (459 + (1372 - 960))))) + 1 + (896 - (114 + 782))));
																				return v109 - (v109 % 1);
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v110 = 0;
														local v111;
														local v112;
														while true do
															if (v110 == 1) then
																while true do
																	if (v111 == 0) then
																		local v126 = 0;
																		while true do
																			if (v126 == 0) then
																				v112 = ((3848 - 2556) - (518 + 551 + ((344 + 1106) - (87 + 1142)))) ^ (v63 - (1112 - (939 + (536 - (30 + 334)))));
																				return (((v62 % (v112 + v112)) >= v112) and (711 - ((1520 - (1024 + 53)) + (1276 - (79 + 930))))) or ((0 + 0) - ((0 - 0) - (0 - 0)));
																			end
																		end
																	end
																end
																break;
															end
															if (v110 == 0) then
																v111 = 0 - 0;
																v112 = nil;
																v110 = 1;
															end
														end
													end
												end;
												v57 = 1;
											end
											if (v57 == 1) then
												v40 = nil;
												v36 = 2;
												break;
											end
										end
									end
									if (v36 == 6) then
										local v58 = 0;
										while true do
											if (v58 == 1) then
												v48 = nil;
												v36 = 7;
												break;
											end
											if (v58 == 0) then
												v47 = nil;
												v47 = function()
													local v94 = 0;
													local v95;
													local v96;
													local v97;
													local v98;
													local v99;
													local v100;
													local v101;
													while true do
														if (v94 == 0) then
															v95 = 0;
															v96 = nil;
															v94 = 1;
														end
														if (v94 == 2) then
															v99 = nil;
															v100 = nil;
															v94 = 3;
														end
														if (v94 == 1) then
															v97 = nil;
															v98 = nil;
															v94 = 2;
														end
														if (v94 == 3) then
															v101 = nil;
															while true do
																local v123 = 0;
																while true do
																	if (v123 == 0) then
																		if (v95 == 2) then
																			local v138 = 0;
																			while true do
																				if (v138 == 1) then
																					for v153 = 1164 - (622 + 541), v42() do
																						local v154 = 0;
																						local v155;
																						local v156;
																						while true do
																							if (0 == v154) then
																								v155 = 0;
																								v156 = nil;
																								v154 = 1;
																							end
																							if (v154 == 1) then
																								while true do
																									if (v155 == 0) then
																										v156 = v40();
																										if (v39(v156, 1 - (136 - (25 + 111)), 1137 - ((1343 - (633 + 501)) + 709 + 218)) == (0 + 0 + 0)) then
																											local v184 = 0;
																											local v185;
																											local v186;
																											local v187;
																											local v188;
																											while true do
																												if (v184 == 2) then
																													while true do
																														if (1 == v185) then
																															local v203 = 0;
																															while true do
																																if (v203 == 1) then
																																	v185 = 2;
																																	break;
																																end
																																if (v203 == 0) then
																																	v188 = {v41(),v41(),nil,nil};
																																	if (v186 == (0 + 0)) then
																																		local v216 = 0;
																																		local v217;
																																		while true do
																																			if (v216 == 0) then
																																				v217 = 0;
																																				while true do
																																					if (v217 == 0) then
																																						v188[(1953 - (797 + 1153)) + (753 - (539 + 214))] = v41();
																																						v188[4] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v186 == 1) then
																																		v188[(1278 - (1216 + 58)) - (2 - 1)] = v42();
																																	elseif (v186 == (1773 - (198 + 1573))) then
																																		v188[(914 - (280 + 625)) - 6] = v42() - ((6 - 4) ^ 16);
																																	elseif (v186 == (8 - (2 + 3))) then
																																		local v229 = 0;
																																		local v230;
																																		while true do
																																			if (v229 == 0) then
																																				v230 = 0;
																																				while true do
																																					if (v230 == 0) then
																																						v188[2 + (4 - 3)] = v42() - ((308 - (253 + 53)) ^ (20 - 4));
																																						v188[4] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v203 = 1;
																																end
																															end
																														end
																														if (v185 == 0) then
																															local v204 = 0;
																															while true do
																																if (v204 == 0) then
																																	v186 = v39(v156, 1 + 1, (7 - 2) - (494 - (451 + 41)));
																																	v187 = v39(v156, (2656 - 761) - ((3761 - 2460) + 590), 906 - (342 + 558));
																																	v204 = 1;
																																end
																																if (v204 == 1) then
																																	v185 = 1;
																																	break;
																																end
																															end
																														end
																														if (2 == v185) then
																															local v205 = 0;
																															while true do
																																if (0 == v205) then
																																	if (v39(v187, 1, 1) == (823 - (713 + 69 + (76 - 36)))) then
																																		v188[(148 + 827) - (767 + 206)] = v101[v188[3 - 1]];
																																	end
																																	if (v39(v187, 1718 - (1570 + 146), 1 + 1) == 1) then
																																		v188[3] = v101[v188[1036 - (131 + 902)]];
																																	end
																																	v205 = 1;
																																end
																																if (v205 == 1) then
																																	v185 = 3;
																																	break;
																																end
																															end
																														end
																														if (v185 == 3) then
																															if (v39(v187, 156 - ((156 - 67) + 64), 2 + 1) == 1) then
																																v188[(1208 - (233 + 956)) - (1231 - (321 + 895))] = v101[v188[1432 - (1316 + 112)]];
																															end
																															v96[v153] = v188;
																															break;
																														end
																													end
																													break;
																												end
																												if (v184 == 1) then
																													v187 = nil;
																													v188 = nil;
																													v184 = 2;
																												end
																												if (v184 == 0) then
																													v185 = 0;
																													v186 = nil;
																													v184 = 1;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v95 = 3;
																					break;
																				end
																				if (v138 == 0) then
																					for v157 = 1 + 0, v100 do
																						local v158 = 0;
																						local v159;
																						local v160;
																						local v161;
																						while true do
																							if (0 == v158) then
																								v159 = 0;
																								v160 = nil;
																								v158 = 1;
																							end
																							if (v158 == 1) then
																								v161 = nil;
																								while true do
																									if (v159 == 0) then
																										local v178 = 0;
																										while true do
																											if (v178 == 1) then
																												v159 = 1;
																												break;
																											end
																											if (v178 == 0) then
																												v160 = v40();
																												v161 = nil;
																												v178 = 1;
																											end
																										end
																									end
																									if (v159 == 1) then
																										if (v160 == (1 + 0)) then
																											v161 = v40() ~= 0;
																										elseif (v160 == 2) then
																											v161 = v43();
																										elseif (v160 == (1 + 0 + (1443 - (99 + 1342)))) then
																											v161 = v44();
																										end
																										v101[v157] = v161;
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v99[6 - (1645 - (925 + 717))] = v40();
																					v138 = 1;
																				end
																			end
																		end
																		if (v95 == 3) then
																			local v139 = 0;
																			while true do
																				if (1 == v139) then
																					return v99;
																				end
																				if (v139 == 0) then
																					for v162 = 1, v42() do
																						v97[v162 - (1 + 0)] = v47();
																					end
																					for v164 = 1, v42() do
																						v98[v164] = v42();
																					end
																					v139 = 1;
																				end
																			end
																		end
																		v123 = 1;
																	end
																	if (v123 == 1) then
																		if (v95 == 1) then
																			local v140 = 0;
																			while true do
																				if (v140 == 0) then
																					v99 = {v96,v97,nil,v98};
																					v100 = v42();
																					v140 = 1;
																				end
																				if (v140 == 1) then
																					v101 = {};
																					v95 = 2;
																					break;
																				end
																			end
																		end
																		if (v95 == 0) then
																			local v141 = 0;
																			while true do
																				if (v141 == 0) then
																					v96 = {};
																					v97 = {};
																					v141 = 1;
																				end
																				if (1 == v141) then
																					v98 = {};
																					v95 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v58 = 1;
											end
										end
									end
									v51 = 1;
								end
								if (2 == v51) then
									if (v36 == 0) then
										local v59 = 0;
										while true do
											if (0 == v59) then
												v37 = 847 - (111 + 467 + (582 - (190 + 124)));
												v38 = nil;
												v59 = 1;
											end
											if (v59 == 1) then
												v28 = v12(v11(v28, (21 - 13) - 3), v7("\53\31", "\27\49\17\210\18\111\85"), function(v65)
													if (v9(v65, 2) == (394 - 315)) then
														local v113 = 0;
														local v114;
														while true do
															if (v113 == 0) then
																v114 = 0;
																while true do
																	if (v114 == 0) then
																		local v127 = 0;
																		while true do
																			if (v127 == 0) then
																				v38 = v8(v11(v65, 2 - 1, 1 + 0));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v115 = 0;
														local v116;
														local v117;
														while true do
															if (v115 == 0) then
																v116 = 0;
																v117 = nil;
																v115 = 1;
															end
															if (v115 == 1) then
																while true do
																	if (v116 == 0) then
																		v117 = v10(v8(v65, 12 + 4));
																		if v38 then
																			local v144 = 0;
																			local v145;
																			local v146;
																			while true do
																				if (v144 == 0) then
																					v145 = 0;
																					v146 = nil;
																					v144 = 1;
																				end
																				if (v144 == 1) then
																					while true do
																						local v175 = 0;
																						while true do
																							if (v175 == 0) then
																								if (v145 == 0) then
																									local v180 = 0;
																									while true do
																										if (v180 == 0) then
																											v146 = v13(v117, v38);
																											v38 = nil;
																											v180 = 1;
																										end
																										if (v180 == 1) then
																											v145 = 1;
																											break;
																										end
																									end
																								end
																								if (v145 == 1) then
																									return v146;
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																			end
																		else
																			return v117;
																		end
																		break;
																	end
																end
																break;
															end
														end
													end
												end);
												v36 = 1;
												break;
											end
										end
									end
									if (v36 == 7) then
										local v60 = 0;
										while true do
											if (v60 == 0) then
												v48 = function(v66, v67, v68)
													local v102 = 0;
													local v103;
													local v104;
													local v105;
													local v106;
													while true do
														if (v102 == 1) then
															v105 = nil;
															v106 = nil;
															v102 = 2;
														end
														if (v102 == 0) then
															v103 = 0;
															v104 = nil;
															v102 = 1;
														end
														if (v102 == 2) then
															while true do
																local v124 = 0;
																while true do
																	if (v124 == 0) then
																		if (v103 == 1) then
																			local v142 = 0;
																			while true do
																				if (v142 == 0) then
																					v106 = v66[(1972 - (876 + 1085)) - 8];
																					return function(...)
																						local v166 = 0;
																						local v167;
																						local v168;
																						local v169;
																						local v170;
																						local v171;
																						local v172;
																						while true do
																							if (v166 == 0) then
																								v167 = 0;
																								v168 = nil;
																								v166 = 1;
																							end
																							if (v166 == 3) then
																								while true do
																									if (1 == v167) then
																										local v181 = 0;
																										while true do
																											if (v181 == 1) then
																												v167 = 2;
																												break;
																											end
																											if (v181 == 0) then
																												v170 = {...};
																												v171 = v20("#", ...) - 1;
																												v181 = 1;
																											end
																										end
																									end
																									if (2 == v167) then
																										local v182 = 0;
																										while true do
																											if (v182 == 0) then
																												v172 = nil;
																												v172 = function()
																													local v192 = 0;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													local v200;
																													local v201;
																													local v202;
																													while true do
																														if (v192 == 1) then
																															v197 = {};
																															v198 = {};
																															v199 = {};
																															for v207 = 0, v171 do
																																if (v207 >= v195) then
																																	v197[v207 - v195] = v170[v207 + 1];
																																else
																																	v199[v207] = v170[v207 + (1988 - (899 + 1088)) + 0];
																																end
																															end
																															v192 = 2;
																														end
																														if (v192 == 2) then
																															v200 = (v171 - v195) + (1288 - (128 + 1159));
																															v201 = nil;
																															v202 = nil;
																															while true do
																																local v208 = 0;
																																local v209;
																																while true do
																																	if (v208 == 0) then
																																		v209 = 0;
																																		while true do
																																			if (1 == v209) then
																																				if (v202 <= (8 + (32 - 13))) then
																																					if (v202 <= (1 + 11 + (1 - 0))) then
																																						if (v202 <= (3 + 3)) then
																																							if (v202 <= (184 - (63 + 19 + (748 - (539 + 109))))) then
																																								if (v202 <= ((0 + 0) - (1400 - (1186 + 214)))) then
																																									local v231 = 0;
																																									local v232;
																																									local v233;
																																									while true do
																																										if (v231 == 0) then
																																											v232 = 0;
																																											v233 = nil;
																																											v231 = 1;
																																										end
																																										if (v231 == 1) then
																																											while true do
																																												if (v232 == 0) then
																																													v233 = v201[(1911 - (1119 + 788)) - (6 - 4)];
																																													do
																																														return v199[v233](v21(v199, v233 + (1682 - ((4813 - 3178) + 46)), v169));
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								elseif (v202 > (206 - (48 + 157))) then
																																									local v244 = 0;
																																									local v245;
																																									local v246;
																																									local v247;
																																									local v248;
																																									local v249;
																																									while true do
																																										if (v244 == 0) then
																																											v245 = 0;
																																											v246 = nil;
																																											v244 = 1;
																																										end
																																										if (v244 == 2) then
																																											v249 = nil;
																																											while true do
																																												if (v245 == 0) then
																																													local v372 = 0;
																																													while true do
																																														if (v372 == 0) then
																																															v246 = v201[2 + 0];
																																															v247, v248 = v196(v199[v246](v199[v246 + 1 + (0 - 0)]));
																																															v372 = 1;
																																														end
																																														if (v372 == 1) then
																																															v245 = 1;
																																															break;
																																														end
																																													end
																																												end
																																												if (1 == v245) then
																																													local v373 = 0;
																																													while true do
																																														if (v373 == 0) then
																																															v169 = (v248 + v246) - (641 - (21 + 115 + 504));
																																															v249 = 0 + (0 - 0);
																																															v373 = 1;
																																														end
																																														if (v373 == 1) then
																																															v245 = 2;
																																															break;
																																														end
																																													end
																																												end
																																												if (v245 == 2) then
																																													for v410 = v246, v169 do
																																														local v411 = 0;
																																														local v412;
																																														while true do
																																															if (0 == v411) then
																																																v412 = 0;
																																																while true do
																																																	if (v412 == 0) then
																																																		v249 = v249 + ((664 - (455 + 207)) - 1);
																																																		v199[v410] = v247[v249];
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v244 == 1) then
																																											v247 = nil;
																																											v248 = nil;
																																											v244 = 2;
																																										end
																																									end
																																								else
																																									v199[v201[1 + 1]] = v199[v201[3 + 0]][v201[4 + 0]];
																																								end
																																							elseif (v202 <= 4) then
																																								if (v202 > 3) then
																																									do
																																										return;
																																									end
																																								else
																																									v199[v201[2 + 0]][v201[3]] = v201[6 - 2];
																																								end
																																							elseif (v202 > 5) then
																																								v199[v201[1 + 1]] = v201[4 - 1] ~= 0;
																																							else
																																								v199[v201[2]] = v199[v201[(2817 - (1348 + 345)) - (942 + 179)]] % v199[v201[4]];
																																							end
																																						elseif (v202 <= (17 - (978 - (614 + 356)))) then
																																							if (v202 <= ((3360 - 2616) - (498 + 147 + 92))) then
																																								v199[v201[6 - 4]][v201[485 - ((349 - 199) + 332)]] = v199[v201[534 - (257 + 273)]];
																																							elseif (v202 > (21 - (32 - 19))) then
																																								if (v201[1444 - (247 + 385 + 810)] < v199[v201[2003 - (1082 + 917)]]) then
																																									v168 = v168 + 1 + (724 - (525 + 199));
																																								else
																																									v168 = v201[2 + 1];
																																								end
																																							else
																																								v199[v201[1 + 1]] = v199[v201[1 + 2]] % v201[1482 - (52 + 11 + 1415)];
																																							end
																																						elseif (v202 <= ((1371 + 417) - (1647 + (239 - 109)))) then
																																							if (v202 > (14 - 4)) then
																																								local v257 = 0;
																																								local v258;
																																								local v259;
																																								local v260;
																																								local v261;
																																								while true do
																																									if (v257 == 1) then
																																										v260 = nil;
																																										v261 = nil;
																																										v257 = 2;
																																									end
																																									if (v257 == 2) then
																																										while true do
																																											if (v258 == 0) then
																																												local v374 = 0;
																																												while true do
																																													if (v374 == 1) then
																																														v258 = 1;
																																														break;
																																													end
																																													if (v374 == 0) then
																																														v259 = v201[(1 - 0) + (2 - 1)];
																																														v260 = {v199[v259](v21(v199, v259 + ((12 - (7 + 3)) - 1), v201[3]))};
																																														v374 = 1;
																																													end
																																												end
																																											end
																																											if (v258 == 1) then
																																												v261 = 0 + (497 - (437 + 60));
																																												for v413 = v259, v201[4 + 0 + 0] do
																																													local v414 = 0;
																																													local v415;
																																													while true do
																																														if (0 == v414) then
																																															v415 = 0;
																																															while true do
																																																if (0 == v415) then
																																																	v261 = v261 + ((1354 - 725) - ((718 - 340) + (817 - 567)));
																																																	v199[v413] = v260[v261];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v257 == 0) then
																																										v258 = 0;
																																										v259 = nil;
																																										v257 = 1;
																																									end
																																								end
																																							else
																																								v199[v201[190 - (38 + 150)]] = v199[v201[1 + 2]] - v201[4];
																																							end
																																						elseif (v202 > 12) then
																																							if (v199[v201[988 - ((582 - (27 + 118)) + 549)]] == v199[v201[(6 - 3) + 1 + 0]]) then
																																								v168 = v168 + (1172 - ((1686 - 709) + (465 - 271)));
																																							else
																																								v168 = v201[(5 + 7) - 9];
																																							end
																																						else
																																							v199[v201[1 + 1]] = v201[132 - (67 + 13 + 49)];
																																						end
																																					elseif (v202 <= 20) then
																																						if (v202 <= 16) then
																																							if (v202 <= 14) then
																																								v199[v201[2]] = not v199[v201[9 - 6]];
																																							elseif (v202 > (19 - 4)) then
																																								local v265 = 0;
																																								local v266;
																																								local v267;
																																								while true do
																																									if (v265 == 1) then
																																										while true do
																																											if (v266 == 0) then
																																												v267 = v201[2];
																																												v199[v267] = v199[v267](v199[v267 + (1114 - (846 + 267))]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v265 == 0) then
																																										v266 = 0;
																																										v267 = nil;
																																										v265 = 1;
																																									end
																																								end
																																							else
																																								local v268 = 0;
																																								local v269;
																																								local v270;
																																								while true do
																																									if (v268 == 1) then
																																										while true do
																																											if (v269 == 0) then
																																												v270 = v201[(4120 - 3286) - (92 + (2781 - 2041))];
																																												v199[v270](v199[v270 + 1]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v268 == 0) then
																																										v269 = 0;
																																										v270 = nil;
																																										v268 = 1;
																																									end
																																								end
																																							end
																																						elseif (v202 <= (86 - 68)) then
																																							if (v202 == (1131 - ((2798 - 2128) + 444))) then
																																								local v271 = 0;
																																								local v272;
																																								local v273;
																																								while true do
																																									if (v271 == 1) then
																																										while true do
																																											if (v272 == 0) then
																																												v273 = v201[1357 - (848 + 91 + 328 + 88)];
																																												do
																																													return v21(v199, v273, v273 + v201[1417 - (1025 + 389)]);
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v271 == 0) then
																																										v272 = 0;
																																										v273 = nil;
																																										v271 = 1;
																																									end
																																								end
																																							else
																																								v199[v201[2 - 0]]();
																																							end
																																						elseif (v202 > (202 - (112 + 71))) then
																																							v199[v201[2 + 0]] = {};
																																						else
																																							v199[v201[(1888 - (274 + 1613)) + 1]] = v199[v201[(3498 - (264 + 1394)) - (764 + 1073)]] - v199[v201[(716 - 350) - (242 + 68 + (74 - 22))]];
																																						end
																																					elseif (v202 <= ((6596 - 4890) - (545 + (3092 - 1954)))) then
																																						if (v202 <= ((1565 - (1363 + 86)) - (81 + (612 - (463 + 135))))) then
																																							local v237 = 0;
																																							local v238;
																																							local v239;
																																							while true do
																																								if (0 == v237) then
																																									v238 = 0;
																																									v239 = nil;
																																									v237 = 1;
																																								end
																																								if (v237 == 1) then
																																									while true do
																																										if (v238 == 0) then
																																											v239 = v201[2];
																																											v199[v239](v21(v199, v239 + 1, v201[(12 - 3) - 6]));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v202 == (18 + 4)) then
																																							v199[v201[(73 - (9 + 63)) + (134 - (132 + 1))]] = v199[v201[2 + 1]] + v201[14 - 10];
																																						else
																																							local v277 = 0;
																																							local v278;
																																							local v279;
																																							local v280;
																																							local v281;
																																							while true do
																																								if (v277 == 0) then
																																									v278 = 0;
																																									v279 = nil;
																																									v277 = 1;
																																								end
																																								if (v277 == 2) then
																																									while true do
																																										if (v278 == 2) then
																																											if (v280 > (0 + 0)) then
																																												if (v281 <= v199[v279 + 1]) then
																																													local v453 = 0;
																																													local v454;
																																													while true do
																																														if (v453 == 0) then
																																															v454 = 0;
																																															while true do
																																																if (v454 == 0) then
																																																	v168 = v201[3];
																																																	v199[v279 + (3 - 0)] = v281;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																											elseif (v281 >= v199[v279 + 1 + 0]) then
																																												local v455 = 0;
																																												local v456;
																																												while true do
																																													if (0 == v455) then
																																														v456 = 0;
																																														while true do
																																															if (0 == v456) then
																																																v168 = v201[3 - 0];
																																																v199[v279 + (1680 - (1376 + 29 + 51 + 221))] = v281;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (0 == v278) then
																																											local v379 = 0;
																																											while true do
																																												if (v379 == 0) then
																																													v279 = v201[(1939 - (696 + 1237)) - (13 - 9)];
																																													v280 = v199[v279 + 2];
																																													v379 = 1;
																																												end
																																												if (v379 == 1) then
																																													v278 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v278 == 1) then
																																											local v380 = 0;
																																											while true do
																																												if (v380 == 0) then
																																													v281 = v199[v279] + v280;
																																													v199[v279] = v281;
																																													v380 = 1;
																																												end
																																												if (v380 == 1) then
																																													v278 = 2;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v277 == 1) then
																																									v280 = nil;
																																									v281 = nil;
																																									v277 = 2;
																																								end
																																							end
																																						end
																																					elseif (v202 <= (563 - (208 + 200 + 130))) then
																																						if (v202 == 24) then
																																							local v282 = 0;
																																							local v283;
																																							local v284;
																																							while true do
																																								if (v282 == 0) then
																																									v283 = 0;
																																									v284 = nil;
																																									v282 = 1;
																																								end
																																								if (v282 == 1) then
																																									while true do
																																										if (v283 == 0) then
																																											v284 = v201[3 - 1];
																																											v199[v284](v21(v199, v284 + 1, v169));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v285 = 0;
																																							local v286;
																																							local v287;
																																							local v288;
																																							while true do
																																								if (v285 == 1) then
																																									v288 = nil;
																																									while true do
																																										if (v286 == 0) then
																																											local v382 = 0;
																																											while true do
																																												if (v382 == 0) then
																																													v287 = v201[1 + (61 - (52 + 8))];
																																													v288 = v199[v201[978 - (858 + 117)]];
																																													v382 = 1;
																																												end
																																												if (1 == v382) then
																																													v286 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v286 == 1) then
																																											v199[v287 + ((1537 - (99 + 1435)) - 2)] = v288;
																																											v199[v287] = v288[v201[1 + 3]];
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v285 == 0) then
																																									v286 = 0;
																																									v287 = nil;
																																									v285 = 1;
																																								end
																																							end
																																						end
																																					elseif (v202 > (40 - 14)) then
																																						local v289 = 0;
																																						local v290;
																																						local v291;
																																						local v292;
																																						while true do
																																							if (v289 == 0) then
																																								v290 = 0;
																																								v291 = nil;
																																								v289 = 1;
																																							end
																																							if (v289 == 1) then
																																								v292 = nil;
																																								while true do
																																									if (v290 == 1) then
																																										for v416 = v291 + (1857 - ((1503 - 912) + 1265)), v201[3 + 0 + (1022 - (606 + 415))] do
																																											v292 = v292 .. v199[v416];
																																										end
																																										v199[v201[(3 - 2) + 1 + 0]] = v292;
																																										break;
																																									end
																																									if (v290 == 0) then
																																										local v387 = 0;
																																										while true do
																																											if (1 == v387) then
																																												v290 = 1;
																																												break;
																																											end
																																											if (v387 == 0) then
																																												v291 = v201[1944 - (1677 + (1442 - (170 + 1008)))];
																																												v292 = v199[v291];
																																												v387 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					elseif not v199[v201[(8 - 4) - 2]] then
																																						v168 = v168 + (1950 - (821 + 1128));
																																					else
																																						v168 = v201[1429 - (438 + 339 + 649)];
																																					end
																																				elseif (v202 <= (686 - (542 + 47 + 56))) then
																																					if (v202 <= ((103 + 13) - (15 + 67))) then
																																						if (v202 <= 30) then
																																							if (v202 <= 28) then
																																								if (v201[8 - 6] == v199[v201[4]]) then
																																									v168 = v168 + (1436 - (1216 + 219));
																																								else
																																									v168 = v201[3];
																																								end
																																							elseif (v202 > (7 + 22)) then
																																								local v294 = 0;
																																								local v295;
																																								local v296;
																																								local v297;
																																								local v298;
																																								local v299;
																																								while true do
																																									if (v294 == 0) then
																																										v295 = 0;
																																										v296 = nil;
																																										v294 = 1;
																																									end
																																									if (2 == v294) then
																																										v299 = nil;
																																										while true do
																																											if (v295 == 1) then
																																												local v388 = 0;
																																												while true do
																																													if (v388 == 0) then
																																														v169 = (v298 + v296) - 1;
																																														v299 = 0;
																																														v388 = 1;
																																													end
																																													if (v388 == 1) then
																																														v295 = 2;
																																														break;
																																													end
																																												end
																																											end
																																											if (v295 == 0) then
																																												local v389 = 0;
																																												while true do
																																													if (v389 == 0) then
																																														v296 = v201[960 - (607 + 351)];
																																														v297, v298 = v196(v199[v296]());
																																														v389 = 1;
																																													end
																																													if (v389 == 1) then
																																														v295 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v295 == 2) then
																																												for v417 = v296, v169 do
																																													local v418 = 0;
																																													local v419;
																																													while true do
																																														if (v418 == 0) then
																																															v419 = 0;
																																															while true do
																																																if (v419 == 0) then
																																																	v299 = v299 + (2 - (936 - (78 + 857)));
																																																	v199[v417] = v297[v299];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v294 == 1) then
																																										v297 = nil;
																																										v298 = nil;
																																										v294 = 2;
																																									end
																																								end
																																							else
																																								for v363 = v201[1 + 1], v201[5 - 2] do
																																									v199[v363] = nil;
																																								end
																																							end
																																						elseif (v202 <= (87 - 55)) then
																																							if (v202 == ((48 + 437) - ((186 - (61 + 69)) + 398))) then
																																								v199[v201[2]] = v199[v201[(291 + 770) - (258 + 800)]][v199[v201[225 - (135 + 21 + 65)]]];
																																							else
																																								v199[v201[5 - 3]] = v48(v194[v201[(1145 - (592 + 552)) + 2]], nil, v68);
																																							end
																																						elseif (v202 > 33) then
																																							v199[v201[5 - (4 - 1)]] = v67[v201[2 + 1]];
																																						else
																																							local v305 = 0;
																																							local v306;
																																							local v307;
																																							while true do
																																								if (v305 == 0) then
																																									v306 = 0;
																																									v307 = nil;
																																									v305 = 1;
																																								end
																																								if (v305 == 1) then
																																									while true do
																																										if (v306 == 0) then
																																											v307 = v201[1394 - ((1552 - (1182 + 289)) + 1311)];
																																											v199[v307] = v199[v307](v21(v199, v307 + (1811 - ((1092 - 722) + (2315 - 875))), v169));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v202 <= 37) then
																																						if (v202 <= (8 + 27)) then
																																							v199[v201[7 - 5]] = v68[v201[14 - 11]];
																																						elseif (v202 > ((485 - (85 + 396)) + (58 - 26))) then
																																							v199[v201[(159 + 4) - ((1879 - (552 + 1298)) + 132)]] = #v199[v201[1 + 2]];
																																						else
																																							local v309 = 0;
																																							local v310;
																																							local v311;
																																							while true do
																																								if (v309 == 1) then
																																									while true do
																																										if (v310 == 0) then
																																											v311 = v201[2];
																																											do
																																												return v199[v311](v21(v199, v311 + (2 - 1), v201[4 - 1]));
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (0 == v309) then
																																									v310 = 0;
																																									v311 = nil;
																																									v309 = 1;
																																								end
																																							end
																																						end
																																					elseif (v202 <= (153 - 114)) then
																																						if (v202 == 38) then
																																							v199[v201[3 - 1]] = v199[v201[8 - (1860 - (643 + 1212))]];
																																						else
																																							local v314 = 0;
																																							local v315;
																																							local v316;
																																							local v317;
																																							local v318;
																																							local v319;
																																							local v320;
																																							while true do
																																								if (v314 == 3) then
																																									while true do
																																										if (3 == v315) then
																																											if v320 then
																																												local v430 = 0;
																																												local v431;
																																												while true do
																																													if (v430 == 0) then
																																														v431 = 0;
																																														while true do
																																															if (v431 == 0) then
																																																v199[v318] = v320;
																																																v168 = v201[(22 - 15) - 4];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											else
																																												v168 = v168 + 1 + 0;
																																											end
																																											break;
																																										end
																																										if (0 == v315) then
																																											local v393 = 0;
																																											while true do
																																												if (0 == v393) then
																																													v316 = v201[2];
																																													v317 = v201[2 + 2];
																																													v393 = 1;
																																												end
																																												if (v393 == 1) then
																																													v315 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v315 == 1) then
																																											local v394 = 0;
																																											while true do
																																												if (v394 == 1) then
																																													v315 = 2;
																																													break;
																																												end
																																												if (v394 == 0) then
																																													v318 = v316 + 2 + 0;
																																													v319 = {v199[v316](v199[v316 + 1], v199[v318])};
																																													v394 = 1;
																																												end
																																											end
																																										end
																																										if (v315 == 2) then
																																											local v395 = 0;
																																											while true do
																																												if (v395 == 0) then
																																													for v457 = 1 + 0, v317 do
																																														v199[v318 + v457] = v319[v457];
																																													end
																																													v320 = v319[1];
																																													v395 = 1;
																																												end
																																												if (v395 == 1) then
																																													v315 = 3;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v314 == 0) then
																																									v315 = 0;
																																									v316 = nil;
																																									v314 = 1;
																																								end
																																								if (v314 == 2) then
																																									v319 = nil;
																																									v320 = nil;
																																									v314 = 3;
																																								end
																																								if (v314 == 1) then
																																									v317 = nil;
																																									v318 = nil;
																																									v314 = 2;
																																								end
																																							end
																																						end
																																					elseif (v202 == ((12 + 114) - 86)) then
																																						v199[v201[2]][v199[v201[2 + (4 - 3)]]] = v199[v201[65 - (28 + 33)]];
																																					else
																																						v199[v201[2]][v199[v201[(2 - 1) + (2 - 0)]]] = v201[230 - (187 + 39)];
																																					end
																																				elseif (v202 <= 48) then
																																					if (v202 <= 44) then
																																						if (v202 <= ((147 - 44) - 61)) then
																																							if v199[v201[2]] then
																																								v168 = v168 + 1;
																																							else
																																								v168 = v201[1 + 1 + 1];
																																							end
																																						elseif (v202 > (1121 - (8 + 1070))) then
																																							do
																																								return v199[v201[6 - 4]];
																																							end
																																						else
																																							v199[v201[(1511 - (1139 + 370)) + 0 + 0]] = v201[436 - (105 + 328)] + v199[v201[4]];
																																						end
																																					elseif (v202 <= 46) then
																																						if (v202 > ((3124 - (1371 + 103)) - (662 + 190 + 753))) then
																																							if (v199[v201[5 - 3]] == v201[14 - (18 - 8)]) then
																																								v168 = v168 + 1;
																																							else
																																								v168 = v201[(37 + 216) - (86 + 75 + 89)];
																																							end
																																						else
																																							v67[v201[3]] = v199[v201[1 + 1 + (0 - 0)]];
																																						end
																																					elseif (v202 > 47) then
																																						local v329 = 0;
																																						local v330;
																																						local v331;
																																						while true do
																																							if (v329 == 1) then
																																								while true do
																																									if (v330 == 0) then
																																										v331 = v201[1 + 1];
																																										do
																																											return v21(v199, v331, v169);
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v329 == 0) then
																																								v330 = 0;
																																								v331 = nil;
																																								v329 = 1;
																																							end
																																						end
																																					elseif (v199[v201[1 + 1]] ~= v201[(6403 - 4819) - (1548 + (79 - 47))]) then
																																						v168 = v168 + ((2 + 0) - (27 - (13 + 13)));
																																					else
																																						v168 = v201[1390 - (1312 + 75)];
																																					end
																																				elseif (v202 <= 52) then
																																					if (v202 <= (99 - 49)) then
																																						if (v202 > ((2073 - (317 + 1616)) - (21 + 70))) then
																																							local v332 = 0;
																																							local v333;
																																							local v334;
																																							while true do
																																								if (v332 == 0) then
																																									v333 = 0;
																																									v334 = nil;
																																									v332 = 1;
																																								end
																																								if (v332 == 1) then
																																									while true do
																																										if (v333 == 0) then
																																											v334 = v201[1368 - (1159 + 207)];
																																											v199[v334] = v199[v334]();
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v335 = 0;
																																							local v336;
																																							local v337;
																																							local v338;
																																							local v339;
																																							while true do
																																								if (v335 == 2) then
																																									while true do
																																										if (1 == v336) then
																																											v339 = v199[v337 + (3 - 1)];
																																											if (v339 > (0 + 0)) then
																																												if (v338 > v199[v337 + (3 - 2)]) then
																																													v168 = v201[1695 - (1416 + (828 - (137 + 415)))];
																																												else
																																													v199[v337 + (7 - 5) + (689 - (170 + 518))] = v338;
																																												end
																																											elseif (v338 < v199[v337 + ((2 - 0) - (1486 - (138 + 1347)))]) then
																																												v168 = v201[3 + 0];
																																											else
																																												v199[v337 + (715 - (547 + 165))] = v338;
																																											end
																																											break;
																																										end
																																										if (0 == v336) then
																																											local v400 = 0;
																																											while true do
																																												if (v400 == 1) then
																																													v336 = 1;
																																													break;
																																												end
																																												if (v400 == 0) then
																																													v337 = v201[1239 - ((210 - (23 + 56)) + 1106)];
																																													v338 = v199[v337];
																																													v400 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v335 == 0) then
																																									v336 = 0;
																																									v337 = nil;
																																									v335 = 1;
																																								end
																																								if (v335 == 1) then
																																									v338 = nil;
																																									v339 = nil;
																																									v335 = 2;
																																								end
																																							end
																																						end
																																					elseif (v202 > (65 - 14)) then
																																						v168 = v201[(5 + 6) - (10 - 2)];
																																					else
																																						v68[v201[3]] = v199[v201[2 - 0]];
																																					end
																																				elseif (v202 <= (39 + 15)) then
																																					if (v202 == (17 + (622 - (212 + 374)))) then
																																						local v343 = 0;
																																						local v344;
																																						local v345;
																																						local v346;
																																						local v347;
																																						while true do
																																							if (v343 == 2) then
																																								while true do
																																									if (v344 == 1) then
																																										local v401 = 0;
																																										while true do
																																											if (v401 == 0) then
																																												v347 = {};
																																												v346 = v18({}, {[v7("\140\42\53\51\162\25\231", "\211\117\92\93\198\124\159")]=function(v447, v448)
																																													local v464 = 0;
																																													local v465;
																																													local v466;
																																													while true do
																																														if (v464 == 1) then
																																															while true do
																																																if (v465 == 0) then
																																																	local v490 = 0;
																																																	while true do
																																																		if (0 == v490) then
																																																			v466 = v347[v448];
																																																			return v466[(3507 - 1817) - (432 + (1728 - (397 + 74)))][v466[1248 - (1226 + 20)]];
																																																		end
																																																	end
																																																end
																																															end
																																															break;
																																														end
																																														if (v464 == 0) then
																																															v465 = 0;
																																															v466 = nil;
																																															v464 = 1;
																																														end
																																													end
																																												end,[v7("\123\155\88\16\249\87\41\64\161\78", "\36\196\54\117\142\62\71")]=function(v447, v448, v449)
																																													local v467 = 0;
																																													local v468;
																																													local v469;
																																													while true do
																																														if (v467 == 1) then
																																															while true do
																																																if (v468 == 0) then
																																																	v469 = v347[v448];
																																																	v469[1 - (0 - 0)][v469[2]] = v449;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																														if (v467 == 0) then
																																															v468 = 0;
																																															v469 = nil;
																																															v467 = 1;
																																														end
																																													end
																																												end});
																																												v401 = 1;
																																											end
																																											if (v401 == 1) then
																																												v344 = 2;
																																												break;
																																											end
																																										end
																																									end
																																									if (v344 == 2) then
																																										for v420 = 914 - (501 + 115 + 145 + 152), v201[(7 - 5) + 1 + 1] do
																																											local v421 = 0;
																																											local v422;
																																											local v423;
																																											while true do
																																												if (v421 == 0) then
																																													v422 = 0;
																																													v423 = nil;
																																													v421 = 1;
																																												end
																																												if (1 == v421) then
																																													while true do
																																														if (v422 == 1) then
																																															if (v423[(6 - 4) - (1 - 0)] == (592 - (173 + 381))) then
																																																v347[v420 - (1 + 0)] = {v199,v423[6 - 3]};
																																															else
																																																v347[v420 - (3 - (194 - (169 + 23)))] = {v67,v423[4 - 1]};
																																															end
																																															v198[#v198 + 1] = v347;
																																															break;
																																														end
																																														if (v422 == 0) then
																																															local v477 = 0;
																																															while true do
																																																if (v477 == 1) then
																																																	v422 = 1;
																																																	break;
																																																end
																																																if (v477 == 0) then
																																																	v168 = v168 + (1 - 0);
																																																	v423 = v193[v168];
																																																	v477 = 1;
																																																end
																																															end
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										v199[v201[2]] = v48(v345, v346, v68);
																																										break;
																																									end
																																									if (v344 == 0) then
																																										local v403 = 0;
																																										while true do
																																											if (v403 == 1) then
																																												v344 = 1;
																																												break;
																																											end
																																											if (0 == v403) then
																																												v345 = v194[v201[4 - 1]];
																																												v346 = nil;
																																												v403 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v343 == 1) then
																																								v346 = nil;
																																								v347 = nil;
																																								v343 = 2;
																																							end
																																							if (v343 == 0) then
																																								v344 = 0;
																																								v345 = nil;
																																								v343 = 1;
																																							end
																																						end
																																					else
																																						local v348 = 0;
																																						local v349;
																																						local v350;
																																						local v351;
																																						local v352;
																																						local v353;
																																						while true do
																																							if (v348 == 1) then
																																								v351 = nil;
																																								v352 = nil;
																																								v348 = 2;
																																							end
																																							if (v348 == 0) then
																																								v349 = 0;
																																								v350 = nil;
																																								v348 = 1;
																																							end
																																							if (v348 == 2) then
																																								v353 = nil;
																																								while true do
																																									if (v349 == 0) then
																																										local v404 = 0;
																																										while true do
																																											if (v404 == 0) then
																																												v350 = v201[901 - (607 + 292)];
																																												v351, v352 = v196(v199[v350](v21(v199, v350 + (1 - (1321 - (1022 + 299))), v169)));
																																												v404 = 1;
																																											end
																																											if (v404 == 1) then
																																												v349 = 1;
																																												break;
																																											end
																																										end
																																									end
																																									if (1 == v349) then
																																										local v405 = 0;
																																										while true do
																																											if (v405 == 1) then
																																												v349 = 2;
																																												break;
																																											end
																																											if (0 == v405) then
																																												v169 = (v352 + v350) - 1;
																																												v353 = 0;
																																												v405 = 1;
																																											end
																																										end
																																									end
																																									if (v349 == 2) then
																																										for v424 = v350, v169 do
																																											local v425 = 0;
																																											local v426;
																																											while true do
																																												if (v425 == 0) then
																																													v426 = 0;
																																													while true do
																																														if (v426 == 0) then
																																															v353 = v353 + 1;
																																															v199[v424] = v351[v353];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v202 > ((904 - 271) - (151 + 152 + (656 - 381)))) then
																																					local v354 = 0;
																																					local v355;
																																					local v356;
																																					while true do
																																						if (v354 == 0) then
																																							v355 = 0;
																																							v356 = nil;
																																							v354 = 1;
																																						end
																																						if (1 == v354) then
																																							while true do
																																								if (0 == v355) then
																																									v356 = v201[2];
																																									v199[v356] = v199[v356](v21(v199, v356 + 1, v201[4 - 1]));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				else
																																					local v357 = 0;
																																					local v358;
																																					local v359;
																																					local v360;
																																					local v361;
																																					local v362;
																																					while true do
																																						if (0 == v357) then
																																							v358 = 0;
																																							v359 = nil;
																																							v357 = 1;
																																						end
																																						if (v357 == 2) then
																																							v362 = nil;
																																							while true do
																																								if (v358 == 1) then
																																									local v408 = 0;
																																									while true do
																																										if (0 == v408) then
																																											v169 = (v361 + v359) - 1;
																																											v362 = (2482 - (1206 + 378)) - (464 + (1436 - 1002));
																																											v408 = 1;
																																										end
																																										if (v408 == 1) then
																																											v358 = 2;
																																											break;
																																										end
																																									end
																																								end
																																								if (v358 == 2) then
																																									for v427 = v359, v169 do
																																										local v428 = 0;
																																										local v429;
																																										while true do
																																											if (v428 == 0) then
																																												v429 = 0;
																																												while true do
																																													if (v429 == 0) then
																																														v362 = v362 + 1;
																																														v199[v427] = v360[v362];
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (0 == v358) then
																																									local v409 = 0;
																																									while true do
																																										if (v409 == 1) then
																																											v358 = 1;
																																											break;
																																										end
																																										if (v409 == 0) then
																																											v359 = v201[1 + 0 + 1 + 0];
																																											v360, v361 = v196(v199[v359](v21(v199, v359 + (1139 - (1110 + 28)), v201[(3309 - (408 + 1170)) - (1636 + (558 - (194 + 272)))])));
																																											v409 = 1;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if (v357 == 1) then
																																							v360 = nil;
																																							v361 = nil;
																																							v357 = 2;
																																						end
																																					end
																																				end
																																				v168 = v168 + 1;
																																				break;
																																			end
																																			if (v209 == 0) then
																																				local v222 = 0;
																																				while true do
																																					if (v222 == 0) then
																																						v201 = v193[v168];
																																						v202 = v201[1];
																																						v222 = 1;
																																					end
																																					if (v222 == 1) then
																																						v209 = 1;
																																						break;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v192 == 0) then
																															v193 = v104;
																															v194 = v105;
																															v195 = v106;
																															v196 = v46;
																															v192 = 1;
																														end
																													end
																												end;
																												v182 = 1;
																											end
																											if (v182 == 1) then
																												v167 = 3;
																												break;
																											end
																										end
																									end
																									if (v167 == 3) then
																										_G['A'], _G['B'] = v46(v19(v172));
																										if not _G['A'][(2 - 0) - 1] then
																											local v189 = 0;
																											local v190;
																											local v191;
																											while true do
																												if (0 == v189) then
																													v190 = 0;
																													v191 = nil;
																													v189 = 1;
																												end
																												if (1 == v189) then
																													while true do
																														if (v190 == 0) then
																															v191 = v66[476 - ((1081 - (464 + 151)) + 6)][v168] or "?";
																															error(v7("\110\70\76\51\108\38\144\88\87\76\53\110\114\209\73\5\101", "\61\37\62\90\28\82\176") .. v191 .. v7("\212\218", "\137\224\225\59\170\198\137\142") .. _G['A'][(2 + 5) - 5]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											return v21(_G['A'], 2, _G['B']);
																										end
																										break;
																									end
																									if (v167 == 0) then
																										local v183 = 0;
																										while true do
																											if (v183 == 1) then
																												v167 = 1;
																												break;
																											end
																											if (v183 == 0) then
																												v168 = 2 - 1;
																												v169 = -1;
																												v183 = 1;
																											end
																										end
																									end
																								end
																								break;
																							end
																							if (v166 == 1) then
																								v169 = nil;
																								v170 = nil;
																								v166 = 2;
																							end
																							if (2 == v166) then
																								v171 = nil;
																								v172 = nil;
																								v166 = 3;
																							end
																						end
																					end;
																				end
																			end
																		end
																		if (v103 == 0) then
																			local v143 = 0;
																			while true do
																				if (v143 == 0) then
																					v104 = v66[(1386 - 549) - (7 + 829)];
																					v105 = v66[1 + 0 + 1 + 0];
																					v143 = 1;
																				end
																				if (v143 == 1) then
																					v103 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												return v48(v47(), {}, v29)(...);
											end
										end
									end
									v51 = 3;
								end
							end
						end
						break;
					end
					if (v35 == 2) then
						v42 = nil;
						v43 = nil;
						v44 = nil;
						v35 = 3;
					end
					if (v35 == 0) then
						v36 = 0;
						v37 = nil;
						v38 = nil;
						v35 = 1;
					end
					if (v35 == 3) then
						v45 = nil;
						v46 = nil;
						v47 = nil;
						v35 = 4;
					end
					if (1 == v35) then
						v39 = nil;
						v40 = nil;
						v41 = nil;
						v35 = 2;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (2 == v24) then
			v6 = table.insert;
			v7 = nil;
			v7 = function(v31, v32)
				local v49 = 0;
				local v50;
				while true do
					if (0 == v49) then
						v50 = {};
						for v52 = 1, #v31 do
							v6(v50, v0(v4(v1(v2(v31, v52, v52 + 1)), v1(v2(v32, 1 + ((v52 - 1) % #v32), 1 + ((v52 - 1) % #v32) + 1))) % 256));
						end
						v49 = 1;
					end
					if (v49 == 1) then
						return v5(v50);
					end
				end
			end;
			v24 = 3;
		end
		if (v24 == 1) then
			v3 = bit32 or bit;
			v4 = v3.bxor;
			v5 = table.concat;
			v24 = 2;
		end
		if (v24 == 5) then
			v14 = _G[v7("\71\4\61\135\247", "\51\101\95\235\146\184\159")][v7("\234\165\57\52\192\197", "\137\202\87\87\161\177\233")];
			v15 = _G[v7("\213\123\39\161\194", "\161\26\69\205\167\203")][v7("\190\183\17\78\199\163", "\215\217\98\43\181")];
			v16 = _G[v7("\164\217\22\33", "\201\184\98\73\41\32\136\143")][v7("\113\123\130\179\212", "\29\31\231\203\164\18\78")];
			v24 = 6;
		end
		if (7 == v24) then
			v20 = _G[v7("\46\37\20\170\37\52", "\93\64\120\207\70\64")];
			v21 = _G[v7("\170\194\241\43\29\180", "\223\172\129\74\126")] or _G[v7("\61\113\182\88\62", "\73\16\212\52\91\17\115")][v7("\36\191\176\134\40\136", "\81\209\192\231\75\227\187\72")];
			v22 = _G[v7("\148\173\177\84\161\235\250\210", "\224\194\223\33\204\137\159\160")];
			v24 = 8;
		end
		if (v24 == 6) then
			v17 = _G[v7("\237\76\79\79\239\71\77", "\138\41\59\41")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\255\92\79\216\224\91\73\105\237\91\87\208", "\140\57\59\181\133\47\40\29")];
			v19 = _G[v7("\221\206\77\220\246", "\173\173\44\176\154\30\32\81")];
			v24 = 7;
		end
		if (v24 == 4) then
			v11 = _G[v7("\52\64\109\121\184\10", "\71\52\31\16\214\109\18\157")][v7("\97\37\248", "\18\80\154\170\97")];
			v12 = _G[v7("\66\46\200\14\124\86", "\49\90\186\103\18")][v7("\177\87\31\37", "\214\36\106\71\17")];
			v13 = _G[v7("\218\156\234\125\255\206", "\169\232\152\20\145")][v7("\217\16\38", "\171\117\86\223\162")];
			v24 = 5;
		end
	end
end
